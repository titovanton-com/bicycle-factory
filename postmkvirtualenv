#!/bin/bash
# This hook is run after a new virtualenv is activated.

echo '*** STARTING POSTMKVIRTUALENV ***'
sudo echo '*** SUDO CONFIRM ***'

ENV_NAME=$(cat $WORKON_HOME/name)
rm $WORKON_HOME/name
echo $ENV_NAME


pip install Django
pip install psycopg2
pip install django-extensions
pip install Werkzeug
pip install sorl-thumbnail
easy_install South
# pip install qrcode
# pip install Wand
# pip install django-modeltranslation
# pip install pep8
# pip install django-recaptcha
# pip install supercaptcha

mkdir $VIRTUAL_ENV/src

# django-assets
pip install jsmin
pip install cssmin
cd $VIRTUAL_ENV/src
git clone https://github.com/miracle2k/webassets.git
cd ./webassets
git checkout stable
python ./setup.py install
cd -
git clone https://github.com/miracle2k/django-assets.git
cd ./django-assets
git checkout stable
python ./setup.py install
cd -

# start django project
echo "*** START DJANGO PROJECT ***"
cd $VIRTUAL_ENV
django-admin.py startproject $ENV_NAME
cd $VIRTUAL_ENV/$ENV_NAME
mkdir $VIRTUAL_ENV/$ENV_NAME/$ENV_NAME/static
mkdir $VIRTUAL_ENV/$ENV_NAME/$ENV_NAME/media
cp $WORKON_HOME/templates/noimage.png $VIRTUAL_ENV/$ENV_NAME/$ENV_NAME/media/
mkdir $VIRTUAL_ENV/$ENV_NAME/$ENV_NAME/static/pic
mkdir $VIRTUAL_ENV/$ENV_NAME/$ENV_NAME/static/less
mkdir $VIRTUAL_ENV/$ENV_NAME/$ENV_NAME/static/js
mkdir $VIRTUAL_ENV/$ENV_NAME/$ENV_NAME/static/css
mkdir $VIRTUAL_ENV/$ENV_NAME/$ENV_NAME/static/libs/
sed -e "s;%ENV_NAME%;$ENV_NAME;g" $WORKON_HOME/templates/robots.txt > $VIRTUAL_ENV/$ENV_NAME/$ENV_NAME/static/robots.txt
touch $VIRTUAL_ENV/$ENV_NAME/$ENV_NAME/static/favicon.ico
echo 'jQuery(document).ready(function($) {' > $VIRTUAL_ENV/$ENV_NAME/$ENV_NAME/static/js/main.js
echo '})' >> $VIRTUAL_ENV/$ENV_NAME/$ENV_NAME/static/js/main.js

# twitter bootstrap
echo "*** Twitter Bootstrap ***"
git clone https://github.com/twbs/bootstrap.git $VIRTUAL_ENV/$ENV_NAME/$ENV_NAME/static/libs/bootstrap
# cp $WORKON_HOME/templates/bootstrap/my_reset.less $VIRTUAL_ENV/$ENV_NAME/$ENV_NAME/static/less
# cp $WORKON_HOME/templates/bootstrap/my_mixins.less $VIRTUAL_ENV/$ENV_NAME/$ENV_NAME/static/less
# cp $WORKON_HOME/templates/bootstrap/bootstrap.less $VIRTUAL_ENV/$ENV_NAME/$ENV_NAME/static/less
# touch $VIRTUAL_ENV/$ENV_NAME/$ENV_NAME/static/less/my_main.less
# touch $VIRTUAL_ENV/$ENV_NAME/$ENV_NAME/static/less/my_variables.less

# titovanton-core
# git clone https://github.com/titovanton-com/titovanton-core.git $VIRTUAL_ENV/src/titovanton-core
# cd $VIRTUAL_ENV/src/titovanton-core
# python setup.py install

# static, media and files from templates
# echo "*** Templates ***"
mkdir $VIRTUAL_ENV/$ENV_NAME/$ENV_NAME/media
mkdir $VIRTUAL_ENV/$ENV_NAME/$ENV_NAME/templates
mkdir $VIRTUAL_ENV/$ENV_NAME/$ENV_NAME/templates/base
touch $VIRTUAL_ENV/$ENV_NAME/$ENV_NAME/templates/base/base.html
mkdir $VIRTUAL_ENV/$ENV_NAME/$ENV_NAME/templates/home
touch $VIRTUAL_ENV/$ENV_NAME/$ENV_NAME/templates/home/home.html
mkdir $VIRTUAL_ENV/$ENV_NAME/$ENV_NAME/templatetags
touch $VIRTUAL_ENV/$ENV_NAME/$ENV_NAME/messages.py
echo '# coding: UTF-8' >> $VIRTUAL_ENV/$ENV_NAME/$ENV_NAME/messages.py
chmod +x $VIRTUAL_ENV/$ENV_NAME/manage.py
cp $WORKON_HOME/templates/uwsgi_params $VIRTUAL_ENV/$ENV_NAME/uwsgi_params

# git
echo "*** Git init ***"
cd $VIRTUAL_ENV/$ENV_NAME
git init
git config --global user.name "titovanton"
# git config --global user.name "titovanton-com"
git config --global user.email "mail@titovanton.com"
git config --global color.ui true
touch README.md
sed -e "s;%ENV_NAME%;$ENV_NAME;g" $WORKON_HOME/templates/.gitignore > .gitignore
git add README.md $ENV_NAME
git commit -m 'first commit'

# setting up uwsgi.ini from template (imperor mode)
echo "*** SETTING UP UWSGI.INI FROM TEMPLATE ***"
sed -e "s;%VIRTUAL_ENV%;$VIRTUAL_ENV;g" -e "s;%ENV_NAME%;$ENV_NAME;g" $WORKON_HOME/templates/template_uwsgi.ini > ${ENV_NAME}_uwsgi.ini
sudo ln -s $VIRTUAL_ENV/$ENV_NAME/${ENV_NAME}_uwsgi.ini /etc/uwsgi/vassals/
echo 'touch this file to reload vassal' > reload_uwsgi

# setting up nginx.conf from template
echo "*** SETTING UP NGINX.CONF FROM TEMPLATE ***"
sed -e "s;%VIRTUAL_ENV%;$VIRTUAL_ENV;g" -e "s;%ENV_NAME%;$ENV_NAME;g" $WORKON_HOME/templates/template_nginx.conf > ${ENV_NAME}_nginx.conf
sudo ln -s $VIRTUAL_ENV/$ENV_NAME/${ENV_NAME}_nginx.conf /etc/nginx/sites-enabled/
sudo /etc/init.d/nginx restart

echo $ENV_NAME >> $WORKON_HOME/.gitignore