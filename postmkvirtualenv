#!/bin/bash
# This hook is run after a new virtualenv is activated.

echo '*** STARTING POSTMKVIRTUALENV ***'
sudo echo '*** SUDO CONFIRM ***'

ENV_NAME=$(cat $WORKON_HOME/name)
rm $WORKON_HOME/name
echo $ENV_NAME

pip install uwsgi
pip install Django
pip install psycopg2
pip install django-extensions
pip install Werkzeug
pip install sorl-thumbnail
# sudo ln -s /usr/lib/x86_64-linux-gnu/libfreetype.so $VIRTUAL_ENV/lib/
# sudo ln -s /usr/lib/x86_64-linux-gnu/libz.so $VIRTUAL_ENV/lib/
# sudo ln -s /usr/lib/x86_64-linux-gnu/libjpeg.so $VIRTUAL_ENV/lib/
pip install PIL
easy_install South
pip install pep8
pip install django-recaptcha
mkdir $VIRTUAL_ENV/src
git clone https://github.com/rnk/django-media-bundler.git $VIRTUAL_ENV/src/django-media-bundler
cd $VIRTUAL_ENV/src/django-media-bundler
./setup.py install

# start django project
echo "*** START DJANGO PROJECT ***"
cd $VIRTUAL_ENV
django-admin.py startproject $ENV_NAME
cd $VIRTUAL_ENV/$ENV_NAME
mkdir $VIRTUAL_ENV/$ENV_NAME/$ENV_NAME/static
mkdir $VIRTUAL_ENV/$ENV_NAME/$ENV_NAME/static/pic
mkdir $VIRTUAL_ENV/$ENV_NAME/$ENV_NAME/static/less
mkdir $VIRTUAL_ENV/$ENV_NAME/$ENV_NAME/static/js
mkdir $VIRTUAL_ENV/$ENV_NAME/$ENV_NAME/static/css
mkdir $VIRTUAL_ENV/$ENV_NAME/$ENV_NAME/static/libs/
echo 'User-agent: *' > $VIRTUAL_ENV/$ENV_NAME/$ENV_NAME/static/robots.txt
echo 'Disallow: *' >> $VIRTUAL_ENV/$ENV_NAME/$ENV_NAME/static/robots.txt
touch $VIRTUAL_ENV/$ENV_NAME/$ENV_NAME/static/favicon.ico
echo 'jQuery(document).ready(function($) {' > $VIRTUAL_ENV/$ENV_NAME/$ENV_NAME/static/js/main.js
echo '})' >> $VIRTUAL_ENV/$ENV_NAME/$ENV_NAME/static/js/main.js

# twitter bootstrap
echo "*** Twitter Bootstrap ***"
git clone https://github.com/twitter/bootstrap.git $VIRTUAL_ENV/$ENV_NAME/$ENV_NAME/static/libs/bootstrap
cp $WORKON_HOME/templates/bootstrap/my_reset.less $VIRTUAL_ENV/$ENV_NAME/$ENV_NAME/static/less
cp $WORKON_HOME/templates/bootstrap/my_mixins.less $VIRTUAL_ENV/$ENV_NAME/$ENV_NAME/static/less
cp $WORKON_HOME/templates/bootstrap/bootstrap.less $VIRTUAL_ENV/$ENV_NAME/$ENV_NAME/static/less
touch $VIRTUAL_ENV/$ENV_NAME/$ENV_NAME/static/less/my_main.less
touch $VIRTUAL_ENV/$ENV_NAME/$ENV_NAME/static/less/my_variables.less

# less hook
git clone https://github.com/titovanton-com/django-less-hook.git $VIRTUAL_ENV/src/django-less-hook
cd $VIRTUAL_ENV/src/django-less-hook
python setup.py install

# static, media and files from templates
mkdir $VIRTUAL_ENV/$ENV_NAME/$ENV_NAME/media
mkdir $VIRTUAL_ENV/$ENV_NAME/$ENV_NAME/templates
mkdir $VIRTUAL_ENV/$ENV_NAME/$ENV_NAME/templates/base
touch $VIRTUAL_ENV/$ENV_NAME/$ENV_NAME/templates/base/base.html
mkdir $VIRTUAL_ENV/$ENV_NAME/$ENV_NAME/templates/home
touch $VIRTUAL_ENV/$ENV_NAME/$ENV_NAME/templates/home/home.html
mkdir $VIRTUAL_ENV/$ENV_NAME/$ENV_NAME/templatetags
touch $VIRTUAL_ENV/$ENV_NAME/$ENV_NAME/messages.py
echo '# coding: UTF-8' >> $VIRTUAL_ENV/$ENV_NAME/$ENV_NAME/messages.py
cp $WORKON_HOME/templates/models.py $VIRTUAL_ENV/$ENV_NAME/$ENV_NAME/models.py
cp $WORKON_HOME/templates/views.py $VIRTUAL_ENV/$ENV_NAME/$ENV_NAME/views.py
cp $WORKON_HOME/templates/utilites.py $VIRTUAL_ENV/$ENV_NAME/$ENV_NAME/utilites.py
cp $WORKON_HOME/templates/forms.py $VIRTUAL_ENV/$ENV_NAME/$ENV_NAME/forms.py
cp $WORKON_HOME/templates/admin.py $VIRTUAL_ENV/$ENV_NAME/$ENV_NAME/admin.py
cp $WORKON_HOME/templates/middleware.py $VIRTUAL_ENV/$ENV_NAME/$ENV_NAME/middleware.py
chmod +x manage.py

# git
cd $VIRTUAL_ENV/$ENV_NAME
git init
git config --global user.name "titovanton-com"
git config --global user.email "mail@titovanton.com"
git config --global color.ui true
touch README.md
sed -e "s;%WORKON%;$ENV_NAME;g" $WORKON_HOME/templates/.gitignore > .gitignore
git add README.md $ENV_NAME
git commit -m 'first commit'

# getting uwsgi_params
echo "*** GETTING UWSGI_PARAMS ***"
git clone -n https://github.com/unbit/uwsgi.git --depth 1 $VIRTUAL_ENV/$ENV_NAME/git_tmp
cd $VIRTUAL_ENV/$ENV_NAME/git_tmp
git checkout HEAD nginx/uwsgi_params
mv nginx/uwsgi_params ../
cd $VIRTUAL_ENV/$ENV_NAME
rm -rf $VIRTUAL_ENV/$ENV_NAME/git_tmp

# setting up uwsgi.ini from template
echo "*** SETTING UP UWSGI.INI FROM TEMPLATE ***"
sed -e "s;%VIRTUAL_ENV%;$VIRTUAL_ENV;g" -e "s;%WORKON%;$ENV_NAME;g" $WORKON_HOME/templates/template_uwsgi.ini > ${ENV_NAME}_uwsgi.ini
sudo $(which uwsgi) --ini $VIRTUAL_ENV/$ENV_NAME/${ENV_NAME}_uwsgi.ini --uid www-data --gid www-data

echo "#!/bin/bash" > $WORKON_HOME/uwsgiauto/${ENV_NAME}.sh
echo "$(which uwsgi) --ini $VIRTUAL_ENV/$ENV_NAME/${ENV_NAME}_uwsgi.ini --uid www-data --gid www-data" >> $WORKON_HOME/uwsgiauto/${ENV_NAME}.sh
chmod +x $WORKON_HOME/uwsgiauto/${ENV_NAME}.sh

# setting up nginx.conf from template
echo "*** SETTING UP NGINX.CONF FROM TEMPLATE ***"
sed -e "s;%VIRTUAL_ENV%;$VIRTUAL_ENV;g" -e "s;%WORKON%;$ENV_NAME;g" $WORKON_HOME/templates/template_nginx.conf > ${ENV_NAME}_nginx.conf
sudo ln -s $VIRTUAL_ENV/$ENV_NAME/${ENV_NAME}_nginx.conf /etc/nginx/sites-enabled/
sudo /etc/init.d/nginx restart

